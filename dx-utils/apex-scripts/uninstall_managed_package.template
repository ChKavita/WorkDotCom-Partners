

// This is taken from FinancialForce Metadata API Apex wrapper here: https://raw.githubusercontent.com/financialforcedev/apex-mdapi/master/apex-mdapi/src/classes/MetadataService.cls




String SOAP_M_URI = 'http://soap.sforce.com/2006/04/metadata';

public class SessionHeader_element {
    public String sessionId;
    private String[] sessionId_type_info = new String[]{'sessionId',SOAP_M_URI,null,'1','1','false'};
    private String[] apex_schema_type_info = new String[]{SOAP_M_URI,'true','false'};
    private String[] field_order_type_info = new String[]{'sessionId'};
}

public class DeleteResult {
    public Error[] errors;
    public String fullName;
    public Boolean success;
    private String[] errors_type_info = new String[]{'errors',SOAP_M_URI,null,'0','-1','false'};
    private String[] fullName_type_info = new String[]{'fullName',SOAP_M_URI,null,'1','1','false'};
    private String[] success_type_info = new String[]{'success',SOAP_M_URI,null,'1','1','false'};
    private String[] apex_schema_type_info = new String[]{SOAP_M_URI,'true','false'};
    private String[] field_order_type_info = new String[]{'errors','fullName','success'};
}

public class Error {
    public ExtendedErrorDetails[] extendedErrorDetails;
    public String[] fields;
    public String message;
    public String statusCode;
    private String[] extendedErrorDetails_type_info = new String[]{'extendedErrorDetails',SOAP_M_URI,null,'0','-1','false'};
    private String[] fields_type_info = new String[]{'fields',SOAP_M_URI,null,'0','-1','false'};
    private String[] message_type_info = new String[]{'message',SOAP_M_URI,null,'1','1','false'};
    private String[] statusCode_type_info = new String[]{'statusCode',SOAP_M_URI,null,'1','1','false'};
    private String[] apex_schema_type_info = new String[]{SOAP_M_URI,'true','false'};
    private String[] field_order_type_info = new String[]{'extendedErrorDetails','fields','message','statusCode'};
}

public class ExtendedErrorDetails {
    public String extendedErrorCode;
    private String[] extendedErrorCode_type_info = new String[]{'extendedErrorCode',SOAP_M_URI,null,'1','1','false'};
    private String[] apex_schema_type_info = new String[]{SOAP_M_URI,'true','false'};
    private String[] field_order_type_info = new String[]{'extendedErrorCode'};
}

public class deleteMetadata_element {
    public String type_x;
    public String[] fullNames;
    private String[] type_x_type_info = new String[]{'type',SOAP_M_URI,null,'1','1','false'};
    private String[] fullNames_type_info = new String[]{'fullNames',SOAP_M_URI,null,'0','-1','false'};
    private String[] apex_schema_type_info = new String[]{SOAP_M_URI,'true','false'};
    private String[] field_order_type_info = new String[]{'type_x','fullNames'};
}    

public class deleteMetadataResponse_element {
    public DeleteResult[] result;
    private String[] result_type_info = new String[]{'result',SOAP_M_URI,null,'0','-1','false'};
    private String[] apex_schema_type_info = new String[]{SOAP_M_URI,'true','false'};
    private String[] field_order_type_info = new String[]{'result'};
}

public class MetadataPort {
    public String endpoint_x = URL.getSalesforceBaseUrl().toExternalForm() + '/services/Soap/m/42.0';
    public Map<String,String> inputHttpHeaders_x;
    public Map<String,String> outputHttpHeaders_x;
    public String clientCertName_x;
    public String clientCert_x;
    public String clientCertPasswd_x;
    public Integer timeout_x;
    public deleteMetadataResponse_element deleteMetadataResponse_element;
    public SessionHeader_element SessionHeader;
    private String SessionHeader_hns = 'SessionHeader=http://soap.sforce.com/2006/04/metadata';
    private String DebuggingInfo_hns = 'DebuggingInfo=http://soap.sforce.com/2006/04/metadata';
    private String DebuggingHeader_hns = 'DebuggingHeader=http://soap.sforce.com/2006/04/metadata';
    private String CallOptions_hns = 'CallOptions=http://soap.sforce.com/2006/04/metadata';
    private String AllOrNoneHeader_hns = 'AllOrNoneHeader=http://soap.sforce.com/2006/04/metadata';
    private String[] ns_map_type_info = new String[]{SOAP_M_URI, 'MetadataService'};
    public DeleteResult[] deleteMetadata(String type_x,String[] fullNames) {
        deleteMetadata_element request_x = new deleteMetadata_element();
        request_x.type_x = type_x;
        request_x.fullNames = fullNames;
        deleteMetadataResponse_element response_x;
        Map<String, deleteMetadataResponse_element> response_map_x = new Map<String, deleteMetadataResponse_element>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
          this,
          request_x,
          response_map_x,
          new String[]{endpoint_x,
          '',
          SOAP_M_URI,
          'deleteMetadata',
          SOAP_M_URI,
          'deleteMetadataResponse',
          'deleteMetadataResponse_element'}
        );
        response_x = response_map_x.get('response_x');
        return response_x.result;
    }


}



try {

    // uninstall managed package
    MetadataPort service = new MetadataPort();
    service.SessionHeader = new SessionHeader_element();
    service.SessionHeader.sessionId = UserInfo.getSessionId();
    List<DeleteResult> results = service.deleteMetadata('InstalledPackage', new String[] { 'namespace' });
    
} 
catch(Exception e) {

    System.debug('If there are any references to packaged components in the org which were not removed by pre-install scripts in this folder, this will fail.');

    System.debug('If the supplied namespace does not match an installed managed package, the resulting error will mention "insufficient privileges" but that is misleading because the issue is you are trying to delete a package which doesnt exist.');

}




